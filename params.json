{
  "name": "ClaCss.js",
  "tagline": "Do not touch your css. Write CSS with classes. ",
  "body": "# ClaCss.js (Complete)\r\n\r\n(Complete mean it's without Basesign. If you want the Basesign version, click here. Or check the Basesign's page).\r\n\r\nClaCss is a super cool tool to write css with class (as color, margin, etc...).\r\n\r\n  - Flexible\r\n  - Magic\r\n  - You can apply :hover\r\n  - You can save rules and use them again.\r\n  - You can apply any javascript style object\r\n\r\nFor information, ClaCss is a component of [Basesign]() which provide clever css classes to use, and write less css as possible. But you can also use ClaCss.js if you don't use [Basesign]().\r\n\r\nIt's for little project. I don't recommend to use this on big project. CSS's files are better. \r\n\r\n\r\n## Table of contents\r\n1. [General & Global](#general--global)\r\n2. [Borders](#borders)\r\n3. [Fonts](#fonts)\r\n4. [Colors & Background's Color](#colors--backgrounds-color)\r\n5. [Display](#display)\r\n6. [Height](#height)\r\n7. [Margin](#margin)\r\n8. [Overflow](#overflow)\r\n9. [Padding](#padding)\r\n10. [Position](#position)\r\n11. [Text-align](#text-align)\r\n12. [Vertical-align](#vertical-align)\r\n13. [Width](#width)\r\n14. [Hover](#hover)\r\n15. [Save a config](#save-configuration)\r\n16. [Use saved confi](#use-configuration)\r\n\r\n\r\n## List of short-hand's included property\r\n- Background-color : ```bg-c```\r\n- Color : ```c```\r\n- Font-size : ```f-s```\r\n- Font-weight : ```f-w```\r\n- Font-family : ```f-f```\r\n- Margin : ```ma```\r\n- Padding : ```pa```\r\n- Height : ```h```\r\n- Width : ```w```\r\n- Position : ```po```\r\n- Overflow : ```o```\r\n- Top : ```t``` / Right : ```r``` / Bottom : ```b``` / Left : ```l```\r\n- Text-align : ```t-a```\r\n- Vertical-align : ```v-a```\r\n- Display : ```d```\r\n\r\n(Want to add something ? Contact me or go on GitHub)\r\n\r\n### Download\r\n    bower install ClaCss\r\n \r\n or check [project's website](https://idkn.github.io/ClaCss)\r\n\r\n### Installation\r\n    <script src=\"ClaCss.js\"></script>\r\n\r\nJust locate the js file, and let the magic explain itself (and write class, magic need little help)\r\n\r\n### Example\r\nWant to make color on a div really fast ? \r\n```\r\n<div class=\"c_#333\"> </div\r\n```\r\n\r\nYeah! Color #333 is now applied.\r\n\r\n### Important informations\r\nIf you haven't understood example, here's some explanation. ```c```, i.e color is the property, _ is for spacing. And #333 is value.\r\n\r\nIf you have multiple property's value use '**-**' to space each value.\r\nMultiple's value example : ```ma_12px-23px``` or ```ma_10px-15px-20px``` or ```ma_5px-10px-15px-20px```\r\n\r\nWhen you're using multiple values but it's an javascript's style object (not included in ClaCss.js's conf), like for example ```transition_value``` add ```-m``` or  ```_m``` to specify that is a multiple value.\r\n\r\n##### What can I use as value?\r\n*For color property*, you can use as value :\r\n* color name\r\n* hex number\r\n* rgb number\r\n* rgba number\r\n\r\nIf you're more interested, check *documentation*.\r\n\r\n# Documentation\r\n## General & Global\r\n\r\n  <a name=\"#general\"></a><a name=\"1.1\"></a>\r\n[1.1](#general) **General**: Global solution.\r\n \r\nTo make changement, we use HTML DOM Style Object.\r\nThe documentation is available [here](http://www.w3schools.com/jsref/dom_obj_style.asp).\r\n\r\nFor example, you can change any property available on documentation's list. For this, find the property you want and write ```bs-yourProperty_value``` where ```value``` is the of the property you want to.\r\nAn example ?  ```bs-overflowY_scroll ``` will set an  ```overflowY``` with an  ```scroll```.\r\n\r\nDon't forget to add ```-m``` OR ```_m``` to specify that's a multiple value.\r\nDon't forget to add ```bs-```\r\n\r\n## Borders\r\n### Borders\r\n  <a name=\"#borders-border\"></a><a name=\"2.1.1\"></a>\r\n[2.1.1](#borders-border) **Border**: Basic of border.\r\n  \r\nBy using ```bo_value``` where ```value``` can be written as this : ```1px-solid-red```. It will be a border of 1px with solid pixel in red color. \r\n\r\n<a name=\"#border-t\"></a><a name=\"2.1.2\"></a>\r\n[2.1.2](#border-t) **Border Top**: Top border.\r\n\r\nUsing ```bo-t_value``` where ```value``` can be written as the same way is [2.1.1](#border)\r\n\r\n<a name=\"#border-r\"></a><a name=\"2.1.3\"></a>\r\n[2.1.3](#border-r) **Border Right**: Right border.\r\n\r\nUsing ```bo-r_value``` where ```value``` can be written as the same way is [2.1.1](#border)\r\n\r\n<a name=\"#border-b\"></a><a name=\"2.1.4\"></a>\r\n[2.1.4](#border-b) **Border Bottom**: Bottom border.\r\n\r\nUsing ```bo-b_value``` where ```value``` can be written as the same way is [2.1](#border)\r\n\r\n<a name=\"#border-l\"></a><a name=\"2.1.5\"></a>\r\n[2.1.5](#border-l) **Border left**: Left border.\r\n\r\nUsing ```bo-l_value``` where ```value``` can be written as the same way is [2.1.1](#border)\r\n\r\n### Border-radius\r\n<a name=\"#border-radius\"></a><a name=\"2.2\"></a>\r\n[2.2](#border-radius) **Border radius**: Basic of border radius.\r\n\r\nBy using ```bora_value``` where ```value``` can be written as this : ```10px```. It will be a border-radius of 10px. \r\n\r\n<a name=\"#border-radius-side\"></a><a name=\"2.2.1\"></a>\r\n[2.2.1](#border-radius-side) **Border radius side**: Side of border-radius.\r\nAs same logical than ```border-r``` or ```border-t```, you can use for border-radius :\r\n\r\n```\r\nt for top\r\n```\r\n```\r\nr for right\r\n```\r\n```\r\nb for bottom\r\n```\r\n```\r\nl for left\r\n```\r\n\r\nAnd what is you want to set topLeft for border-radius ?\r\nThan, you have the choice between ```tl``` OR ```tr``` OR ```bl``` OR ```br```.\r\n\r\nAn example :    ```bora-t_10px``` will set border_radius for all top with 10px. \r\n\r\n## Fonts\r\n<a name=\"#font-size\"></a><a name=\"3.1\"></a>\r\n[3.1](#font-size) **Font Size**: Set font size.\r\n\r\nUsing ```f-s_value``` where ```value``` can be written in px, em, rem, %, you've understand, it's as you want.\r\n\r\n<a name=\"#font-weight\"></a><a name=\"3.2\"></a>\r\n[3.2](#font-weight) **Font weight**: Set font weight.\r\n\r\nUsing ```f-w_value``` where ```value``` can be written as you write font-weight generally.\r\n\r\n<a name=\"#font-family\"></a><a name=\"3.3\"></a>\r\n[3.3](#font-family) **Font family**: Set font family.\r\n\r\nUsing ```f-f_value``` where ```value``` can be written as you write font-family generally.\r\n\r\nExample : ```f-f_Merriweather``` \r\n\r\n## Colors & Background's Color\r\n<a name=\"#color\"></a><a name=\"4.1\"></a>\r\n[4.1](#color) **Colors**: Set color.\r\n\r\nUsing ```c_value``` where ```value``` can be written in color name (red, blue, green) or in hexa (#fff, #123456, etc), or in rgb/rgba.\r\n\r\n<a name=\"#background-color\"></a><a name=\"4.2\"></a>\r\n[4.2](#background-color) **Background-color**: Set background-color.\r\n\r\nUsing ```bg-c_value``` where ```value``` can be written as you write it usually.\r\n\r\n## Display\r\n<a name=\"#display\"></a><a name=\"5.1\"></a>\r\n[5.1](#display) **Display**: Set display.\r\n\r\nUsing ```d_value``` where ```value``` can be written as you write it usually. It can be inline, inline-block, none, block, etc...\r\n\r\n## Height\r\n<a name=\"#height\"></a><a name=\"6.1\"></a>\r\n[6.1](#height) **Height**: Set height.\r\n\r\nUsing ```h_value``` where ```value``` can be written as you write it usually. It can be in px, in %, etc\r\n## Margin\r\n<a name=\"#margin\"></a><a name=\"7.1\"></a>\r\n[7.1](#margin) **Margin**: Set margin.\r\n\r\nUsing ```ma_value``` where ```value``` can be written as you write it usually. Example ? ```ma_15px```. Percentage is working too.\r\n\r\n**Multiple example** : ```ma_12px-23px``` or ```ma_10px-15px-20px``` or ```ma_5px-10px-15px-20px```\r\n## Overflow\r\n<a name=\"#overflow\"></a><a name=\"8.1\"></a>\r\n[8.1](#overflow) **Height**: Set overflow.\r\n\r\nUsing ```o_value``` where ```value``` can be written as you write it usually. It can be visible, hidden, scroll, auto, etc..\r\n\r\n## Padding\r\n<a name=\"#padding\"></a><a name=\"9.1\"></a>\r\n[9.1](#padding) **Padding**: Set padding.\r\n\r\nUsing ```pa_value``` where ```value``` can be written as you write it usually. Example ? ```pa_15px```. Percentage is working too.\r\n\r\n**Multiple example** : ```pa_12px-23px``` or ```pa_10px-15px-20px``` or ```pa_5px-10px-15px-20px```\r\n\r\n## Position\r\n<a name=\"#position\"></a><a name=\"10.1\"></a>\r\n[10.1](#position) **Position**: Set position.\r\n\r\nUsing ```p_value``` where ```value``` can be written as you write it usually. It can be relative, absolute, fixed\r\n## Text-align\r\n<a name=\"#text-align\"></a><a name=\"11.1\"></a>\r\n[11.1](#text-align) **Text-align**: Set text-align.\r\n\r\nUsing ```t-a_value``` where ```value``` can be written as you write it usually. It can be center, left, right, justify, etc...\r\n\r\n## Vertical-align\r\n<a name=\"#vertical-align\"></a><a name=\"12.1\"></a>\r\n[12.1](#vertical-align) **Vertical-align**: Set vertical-align.\r\n\r\nUsing ```v-a-a_value``` where ```value``` can be written as you write it usually. It can be baseline, middle, bottom, etc...\r\n## Width\r\n<a name=\"#width\"></a><a name=\"13.1\"></a>\r\n[13.1](#width) **Width**: Set width.\r\n\r\nUsing ```w_value``` where ```value``` can be written as you write it usually. It can be in px, in %, etc\r\n\r\n\r\n## Hover\r\n<a name=\"#hover\"></a><a name=\"14.1\"></a>\r\n[14.1](#hover) **Hover**: Set an :hover.\r\n\r\nUsing ```property_value:hover``` where ```property``` is the property you want to set your hover and where ```value``` can be written as you write it usually. \r\n\r\nExample : ```c_green:hover```\r\n\r\n## Save configuration\r\n<a name=\"#saveconf\"></a><a name=\"15.1\"></a>\r\n[15.1](#saveconf) **Save configuration**: Save configuration.\r\n\r\nYou can save all the property you have setted in your class. For this, use ```sc-nameOfYourConfig```, sc- is to specify it's an saving, and obviously, ```nameOfYourConfig``` is the name you want to give it. \r\n\r\nUse one unique name per configuration.\r\nExample : ```sc-Trumpostrophic``` will save your config.\r\n\r\nSave your config at the last to save all classes before.\r\nExample : ``` <div class=\"c_red bg-c_white pa_20% sc-Trumpostrophic\"> ``` will save color, bg-c and padding in Trumpostrophic. \r\n\r\n\r\n## Use configuration\r\n<a name=\"#useconf\"></a><a name=\"16.1\"></a>\r\n[16.1](#useconf) **Use configuration**: Use configuration.\r\n\r\nTo use configuration : ```uc-nameOfYourConfiguration```, where ```nameOfYourConfiguration``` is the name you have given to your config. For our previous example, we'll use ```uc-Trumpostrophic``` to apply ```c_red bg-c_white pa_20%```.\r\n\r\nSo far, so good ?\r\n\r\n# License\r\n\r\nClaCss by Guillaume Bonnet [@idkn on Github](https://github.com/idkn) is licensed under MIT.\r\n\r\n# Improvement\r\nCheck code. Write code. Push code.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}